/*
 * CadastroDependente.java
 *
 * Created on 10 de Outubro de 2007, 15:42
 */
package net.softlages.gui;

import net.softlages.gui.tablecfg.DependenteTableModel;
import net.softlages.gui.tablecfg.DependenteColumnModel;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import net.softlages.dao.DependenteDAO;
import net.softlages.dao.FuncionarioDAO;
import net.softlages.db.Conexao;
import net.softlages.exception.DependenteException;
import net.softlages.exception.FuncionarioException;
import net.softlages.vo.Dependente;
import net.softlages.vo.Funcionario;

/**
 *
 * @author  Java
 */
public class CadastroDependente extends javax.swing.JDialog {

    private List<Dependente> listaDependentes = new ArrayList<Dependente>();
    private List<Funcionario> listaFuncionarios = new ArrayList<Funcionario>();
    private FuncionarioDAO funcionarioDAO;
    private DependenteDAO dependenteDAO;
    private Dependente dependente;
    private Funcionario funcionario;

    /** Creates new form CadastroDependente */
    public CadastroDependente(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        estabelecerConexaoBD();

        listaFuncionarios = carregarDadosFuncionario();
        comboBoxFuncionarios.setModel(new javax.swing.DefaultComboBoxModel(listaFuncionarios.toArray()));
        comboBoxFuncionarios.setSelectedIndex(-1);

        cbParentescoDep.setSelectedIndex(-1);
        FormatValues.formatDate(this.ftfDataNascDep);

        this.setListaDependentes(listaDependentes);
        dependentes.setAutoCreateColumnsFromModel(false);
        java.awt.FontMetrics fm = dependentes.getFontMetrics(dependentes.getFont());
        dependentes.setColumnModel(new DependenteColumnModel(fm));

        this.setLocationRelativeTo(this.getParent());

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Código Gerado ">//GEN-BEGIN:initComponents
    private void initComponents() {
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel3 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        tfNomeDep = new javax.swing.JTextField();
        ftfDataNascDep = new javax.swing.JFormattedTextField();
        cbParentescoDep = new javax.swing.JComboBox();
        rbMasculinoDep = new javax.swing.JRadioButton();
        rbFemininoDep = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        dependentes = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        comboBoxFuncionarios = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jbInserir = new javax.swing.JButton();
        jbConsultar = new javax.swing.JButton();
        jbRemover = new javax.swing.JButton();
        jbConfirmar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jbFechar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Cadastro de Dependentes"));
        jLabel13.setText("Nome:");

        jLabel14.setText("Sexo:");

        jLabel15.setText("Data Nascimento:");

        jLabel16.setText("Parentesco:");

        cbParentescoDep.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Filho", "Conjuge", "Pai", "M\u00e3e" }));

        buttonGroup1.add(rbMasculinoDep);
        rbMasculinoDep.setSelected(true);
        rbMasculinoDep.setText("Masculino");
        rbMasculinoDep.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rbMasculinoDep.setMargin(new java.awt.Insets(0, 0, 0, 0));

        buttonGroup1.add(rbFemininoDep);
        rbFemininoDep.setText("Feminino");
        rbFemininoDep.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rbFemininoDep.setMargin(new java.awt.Insets(0, 0, 0, 0));

        dependentes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        dependentes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dependentesMouseClicked(evt);
            }
        });
        dependentes.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                dependentesFocusGained(evt);
            }
        });
        dependentes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                dependentesKeyReleased(evt);
            }
        });

        jScrollPane2.setViewportView(dependentes);

        jLabel11.setText("Respons\u00e1vel:");

        comboBoxFuncionarios.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboBoxFuncionarios.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                comboBoxFuncionariosPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jbInserir.setMnemonic('I');
        jbInserir.setText("Inserir");
        jbInserir.setActionCommand("inserirSetor");
        jbInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbInserirActionPerformed(evt);
            }
        });

        jPanel2.add(jbInserir);

        jbConsultar.setMnemonic('E');
        jbConsultar.setText("Consultar");
        jbConsultar.setActionCommand("editarSetor");
        jbConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbConsultarActionPerformed(evt);
            }
        });

        jPanel2.add(jbConsultar);

        jbRemover.setMnemonic('R');
        jbRemover.setText("Remover");
        jbRemover.setActionCommand("removerSetor");
        jbRemover.setEnabled(false);
        jbRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRemoverActionPerformed(evt);
            }
        });

        jPanel2.add(jbRemover);

        jbConfirmar.setMnemonic('C');
        jbConfirmar.setText("Confirmar");
        jbConfirmar.setActionCommand("confirmarSetor");
        jbConfirmar.setEnabled(false);
        jbConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbConfirmarActionPerformed(evt);
            }
        });

        jPanel2.add(jbConfirmar);

        jbCancelar.setMnemonic('a');
        jbCancelar.setText("Cancelar");
        jbCancelar.setActionCommand("cancelarSetor");
        jbCancelar.setEnabled(false);
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jPanel2.add(jbCancelar);

        jbFechar.setMnemonic('F');
        jbFechar.setText("Fechar");
        jbFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbFecharActionPerformed(evt);
            }
        });

        jPanel2.add(jbFechar);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 664, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 664, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ftfDataNascDep, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbMasculinoDep)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbFemininoDep)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbParentescoDep, 0, 428, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfNomeDep, javax.swing.GroupLayout.DEFAULT_SIZE, 619, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboBoxFuncionarios, 0, 585, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(tfNomeDep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(rbFemininoDep)
                            .addComponent(rbMasculinoDep)
                            .addComponent(jLabel14)
                            .addComponent(cbParentescoDep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(ftfDataNascDep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(comboBoxFuncionarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(16, 16, 16)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void comboBoxFuncionariosPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_comboBoxFuncionariosPopupMenuWillBecomeInvisible
        funcionario = (Funcionario) comboBoxFuncionarios.getSelectedItem();
        try {
            funcionario = funcionarioDAO.carregarDependentes(funcionario, Conexao.getCon());
            this.setListaDependentes(funcionario.getDependentes());
        } catch (FuncionarioException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_comboBoxFuncionariosPopupMenuWillBecomeInvisible

    private void jbFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbFecharActionPerformed
        this.dispose();
    }//GEN-LAST:event_jbFecharActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        limparCamposDep();
        tratarBotoesDep();
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jbConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbConfirmarActionPerformed
        dependente = this.getDependente();
        try {
            dependenteDAO.update(dependente.getCodigo(), dependente, Conexao.getCon());
            funcionario.getDependentes().set(funcionario.getDependentes().indexOf(dependente), dependente);
            this.setListaDependentes(funcionario.getDependentes());
        } catch (DependenteException se) {
            JOptionPane.showMessageDialog(this, "Erro ao alterar os dados\n" + se.getMessage(), "Erro na alteração de dados", JOptionPane.ERROR_MESSAGE);
        }

        limparCamposDep();
        tratarBotoesDep();
    }//GEN-LAST:event_jbConfirmarActionPerformed

    private void jbRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRemoverActionPerformed
        int resposta = javax.swing.JOptionPane.showConfirmDialog(this,
                "Tem certeza de que deseja remover" +
                " o dependente\n[" + dependente.getNome() + "] ?",
                "Remove Dependente",
                JOptionPane.YES_NO_OPTION);
        if (resposta == JOptionPane.YES_OPTION) {
            try {
                dependenteDAO.delete(dependente.getCodigo(), Conexao.getCon());
                funcionario.getDependentes().remove(dependente);
                this.setListaDependentes(funcionario.getDependentes());
            } catch (DependenteException se) {
                JOptionPane.showMessageDialog(this, "Erro ao remover os dados\n" + se.getMessage(), "Erro de exclusão de dados", JOptionPane.ERROR_MESSAGE);
            }
        }

        limparCamposDep();
        tratarBotoesDep();
    }//GEN-LAST:event_jbRemoverActionPerformed

    private void jbConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbConsultarActionPerformed
        dependente = this.getDependenteSelecionado();
        this.setDependente(dependente);
        tratarBotoesDep();

    }//GEN-LAST:event_jbConsultarActionPerformed

    private void jbInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbInserirActionPerformed
        dependente = new Dependente();
        dependente = this.getDependente();
        try {
            dependenteDAO.insert(dependente, Conexao.getCon());
            funcionario.addDependente(dependente);
            this.setListaDependentes(funcionario.getDependentes());
            limparCamposDep();
        } catch (DependenteException se) {
            JOptionPane.showMessageDialog(this, "Erro ao inserir os dados\n" + se.getMessage(), "Erro na inserção dos dados", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbInserirActionPerformed

    private void dependentesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dependentesMouseClicked
        jbConsultar.doClick();
        if (jbInserir.isEnabled()) {
            tratarBotoesDep();
        }

    }//GEN-LAST:event_dependentesMouseClicked

    private void dependentesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dependentesKeyReleased
        if (evt.getKeyCode() == evt.VK_DOWN || evt.getKeyCode() == evt.VK_UP) {
            jbConsultar.doClick();
            if (jbInserir.isEnabled()) {
                tratarBotoesDep();
            }
        }
    }//GEN-LAST:event_dependentesKeyReleased

    private void dependentesFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dependentesFocusGained
        this.tratarBotoesDep();
    }//GEN-LAST:event_dependentesFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new CadastroDependente(new javax.swing.JFrame(), true).setVisible(true);
            }
        });
    }

    private void setListaDependentes(List<Dependente> listaDependentes) {
        this.dependentes.setModel(new DependenteTableModel(listaDependentes));
    }

    private DependenteTableModel getDependenteTableModel() {
        return (DependenteTableModel) dependentes.getModel();
    }

    public Dependente getDependenteSelecionado() {
        return ((DependenteTableModel) dependentes.getModel()).getValoresDependente(dependentes.getSelectedRow());
    }

    public Dependente[] getDependentesSelecionados() {
        Dependente[] selecao = new Dependente[dependentes.getSelectedRowCount()];
        int[] indices = dependentes.getSelectedRows();
        int j = 0;
        for (int i : indices) {
            selecao[j++] = ((DependenteTableModel) dependentes.getModel()).getValoresDependente(i);
        }
        return selecao;
    }

    private Dependente getDependente() {
        dependente.setNome(tfNomeDep.getText());
        java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("dd/MM/yyyy");
        try {
            dependente.setDataNasc(sdf.parse(ftfDataNascDep.getText()));
        } catch (ParseException pe) {
            javax.swing.JOptionPane.showMessageDialog(null, "Data inválida");
        }

        dependente.setParentesco(cbParentescoDep.getSelectedIndex());
        if (rbMasculinoDep.isSelected()) {
            dependente.setSexo("M");
        } else {
            dependente.setSexo("F");
        }

        dependente.setFuncionario(this.funcionario);
        return dependente;
    }

    private void setDependente(Dependente dependente) {
        tfNomeDep.setText(dependente.getNome());
        ftfDataNascDep.setValue(dependente.getDataNasc());

        SimpleDateFormat formatDateToStr = new SimpleDateFormat("dd/MM/yyyy");
        String novoFormato = formatDateToStr.format(dependente.getDataNasc());
        ftfDataNascDep.setText(novoFormato);

        cbParentescoDep.setSelectedIndex(dependente.getParentesco());
        if (dependente.getSexo().compareToIgnoreCase("M") == 0) {
            rbMasculinoDep.setSelected(true);
        } else {
            rbFemininoDep.setSelected(true);
        }
    }

    private void limparCamposDep() {
        tfNomeDep.setText(null);
        rbMasculinoDep.setSelected(true);
        cbParentescoDep.setSelectedIndex(-1);
        ftfDataNascDep.setText(null);
        FormatValues.formatDate(this.ftfDataNascDep);
        tfNomeDep.requestFocus();
    }

    private void tratarBotoesDep() {
        jbInserir.setEnabled(!jbInserir.isEnabled());
        jbRemover.setEnabled(!jbRemover.isEnabled());
        jbCancelar.setEnabled(!jbCancelar.isEnabled());
        jbConfirmar.setEnabled(!jbConfirmar.isEnabled());
        jbFechar.setEnabled(!jbFechar.isEnabled());
    }

    private void estabelecerConexaoBD() {
        Conexao.conectar();
        funcionarioDAO = new FuncionarioDAO();
        dependenteDAO = new DependenteDAO();
    }

    private List<Funcionario> carregarDadosFuncionario() {
        try {
            listaFuncionarios = funcionarioDAO.findAll(Conexao.getCon());
        } catch (FuncionarioException ex) {
            ex.printStackTrace();
        }
        return listaFuncionarios;
    }
    // Declaração de variáveis - não modifique//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cbParentescoDep;
    private javax.swing.JComboBox comboBoxFuncionarios;
    private javax.swing.JTable dependentes;
    private javax.swing.JFormattedTextField ftfDataNascDep;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbConfirmar;
    private javax.swing.JButton jbConsultar;
    private javax.swing.JButton jbFechar;
    private javax.swing.JButton jbInserir;
    private javax.swing.JButton jbRemover;
    private javax.swing.JRadioButton rbFemininoDep;
    private javax.swing.JRadioButton rbMasculinoDep;
    private javax.swing.JTextField tfNomeDep;
    // Fim da declaração de variáveis//GEN-END:variables
}
